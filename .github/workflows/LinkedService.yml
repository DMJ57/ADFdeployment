name: Deploy ADF Pipelines

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull requests to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Azure CLI
      uses: azure/CLI@v1
      with:
        azcliversion: '2.30.0'  # Correct input for specifying Azure CLI version
        inlineScript: |
          az --version  # Example inline script to verify Azure CLI setup

    - name: Install jq
      run: sudo apt-get install jq

    - name: Login to Azure
      uses: azure/login@v1 
      with:
        creds: ${{ secrets.AZURE_SPN_CREDENTIAL }}

    - name: Validate Bicep Template
      run: |
        az deployment group validate \
            --resource-group komatsu \
            --template-file ./bicep/main.bicep \
            --parameters @./bicep/parameters.json
  
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Azure CLI
      uses: azure/CLI@v1
      with:
        azcliversion: '2.30.0'  # Correct input for specifying Azure CLI version
        inlineScript: |
          az --version  # Example inline script to verify Azure CLI setup

    - name: Install jq
      run: sudo apt-get install jq

    - name: Login to Azure
      uses: azure/login@v1 
      with:
        creds: ${{ secrets.AZURE_SPN_CREDENTIAL }}  # Make sure to store your Azure credentials as secrets

    - name: Read linkedService JSON files and deploy
      run: |
        # Ensure the correct path to the JSON files
        linkedService1=$(cat ./linkedService/TestLinkedService.json)

        # Construct a JSON array with the linkedService contents
        linkedServices=$(jq -n \
          --arg linkedService1 "$linkedService1" \
          '[
            {
              "name": "NewBlobStorage",
              "definition": $linkedService1 | fromjson
            }
          ]')

        # Deploy using Bicep (or ARM template)
        az deployment group create \
          --resource-group "komatsu" \
          --template-file ./bicep/modules/linkedservice.bicep \
          --parameters dataFactoryName=ADF-components \
          --parameters linkedServices="$linkedServices"

  # tag:
  #   runs-on: ubuntu-latest
  #   steps:
  #       - name: Checkout repository
  #         uses: actions/checkout@v2
           
  #       - name: Determine new version
  #         id: new_version
  #         run: |
  #           # Extract the latest tag
  #           latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
  #           echo "Latest tag: $latest_tag"
            
  #           # Increment the patch version
  #           IFS='.' read -r -a parts <<< "${latest_tag:1}"
  #           patch=${parts[2]}
  #           new_patch=$((patch + 1))
  #           new_tag="v${parts[0]}.${parts[1]}.$new_patch"
            
  #           echo "New version: $new_tag"
  #           echo "::set-output name=tag::$new_tag"
  #       - name: Create a new tag
  #         run: |
  #           new_tag=${{ steps.new_version.outputs.tag }}
  #           git tag -a $new_tag -m "Automated release for version $new_tag"
  #           git push origin $new_tag
  #       - name: Push new tag to GitHub
  #         run: |
  #           new_tag=${{ steps.new_version.outputs.tag }}
  #           git push origin $new_tag
  
